
import warnings
warnings.filterwarnings("ignore", category=UserWarning)

import numpy as np
import pandas as pd
import joblib
import warnings
from sklearn.preprocessing import StandardScaler

# âœ… Suppress UserWarning
warnings.filterwarnings("ignore", category=UserWarning)

# ðŸ”¹ Load the trained SVM model and scaler
svm_model = joblib.load("svm_diabetes_best_model.pkl")
scaler = joblib.load("scaler_diabetes.pkl")

# ðŸ”¹ Define feature names (Adjust based on your dataset)
feature_names = [
    "Pregnancies", "Glucose", "BloodPressure", "SkinThickness", "Insulin",
    "BMI", "DiabetesPedigreeFunction", "Age"
]

# ðŸ”¹ Ask the user for input values
print("\nðŸ”¹ Enter the following health metrics to predict diabetes:")
user_input = []
for feature in feature_names:
    value = float(input(f"ðŸ‘‰ Enter {feature}: "))
    user_input.append(value)

# ðŸ”¹ Convert input to NumPy array and reshape for model
user_data = np.array(user_input).reshape(1, -1)

# âœ… **Fix: Convert to DataFrame before scaling**
user_data_df = pd.DataFrame(user_data, columns=feature_names)
user_data_scaled = scaler.transform(user_data_df)

# ðŸ”¹ Make prediction
prediction = svm_model.predict(user_data_scaled)[0]
probability = svm_model.predict_proba(user_data_scaled)[0][1]  # Probability of being diabetic

# ðŸ”¹ Display result
print("\nâœ… **Diabetes Prediction Result:**")
if prediction == 1:
    print("ðŸ”´ **You are at risk of diabetes.** (Consult a doctor for further evaluation.)")
else:
    print("ðŸŸ¢ **You are not at risk of diabetes.** (Maintain a healthy lifestyle.)")

print(f"ðŸ”¹ Probability of being diabetic: {probability:.2%}")
